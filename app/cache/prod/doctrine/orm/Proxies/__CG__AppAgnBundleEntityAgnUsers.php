<?php

namespace Proxies\__CG__\App\AgnBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AgnUsers extends \App\AgnBundle\Entity\AgnUsers implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'activeDate', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'crBy', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'crDate', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'empId', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'endDate', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'ladBy', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'ladDate', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'password', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'userCode', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'userId', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'userName');
        }

        return array('__isInitialized__', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'activeDate', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'crBy', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'crDate', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'empId', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'endDate', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'ladBy', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'ladDate', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'password', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'userCode', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'userId', '' . "\0" . 'App\\AgnBundle\\Entity\\AgnUsers' . "\0" . 'userName');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AgnUsers $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setActiveDate($activeDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActiveDate', array($activeDate));

        return parent::setActiveDate($activeDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveDate', array());

        return parent::getActiveDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCrBy($crBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCrBy', array($crBy));

        return parent::setCrBy($crBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCrBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCrBy', array());

        return parent::getCrBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCrDate($crDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCrDate', array($crDate));

        return parent::setCrDate($crDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCrDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCrDate', array());

        return parent::getCrDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmpId($empId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmpId', array($empId));

        return parent::setEmpId($empId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmpId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmpId', array());

        return parent::getEmpId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', array($endDate));

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', array());

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLadBy($ladBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLadBy', array($ladBy));

        return parent::setLadBy($ladBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getLadBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLadBy', array());

        return parent::getLadBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setLadDate($ladDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLadDate', array($ladDate));

        return parent::setLadDate($ladDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLadDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLadDate', array());

        return parent::getLadDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCode($userCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCode', array($userCode));

        return parent::setUserCode($userCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCode', array());

        return parent::getUserCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getUserId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', array());

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserName($userName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', array($userName));

        return parent::setUserName($userName);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', array());

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', array());

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', array($serialized));

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', array());

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', array());

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', array());

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', array());

        return parent::isEnabled();
    }

}
